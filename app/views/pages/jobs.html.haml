.page-header.header-filter.clear-filter.purple-filter
  .container
    -# logo
    .row
      .col-md-8.ml-auto.mr-auto
        %h2.title.text-left Connecting great jobs to great candidates
    

.main.main-raised
  -# .no-child-div.pl-5.pr-5.margin-top-minus

        
  .container
    .row
      .col-lg-12
        - jobs_for_map = []

        - if @info.present?
          - results = @info

          - unless results.nil?
            .col-12
              = render partial: 'pages/job', locals: { results: results, jobs_for_map: jobs_for_map } 
  
    .row
      = render 'pages/shared/search'
    .row
      .col-lg-12
        .card.mapa.p-s-3.user-menu
          %ul.nav.nav-pills.nav-pills-icons{role:"tablist", "data-controller":"togglemap", 'data-togglemap-open':'togglemap open', 'data-togglemap-close':'Toggle close'}
            %li.nav-item{title:'Search'}
              %a.nav-link.active.show(href="#map1" role="tab" data-toggle="tab" aria-selected="true")
                %i.material-icons search
                Search
            %li.nav-item{title:'Search Options'}
              %a.nav-link(href="#map2" role="tab" data-toggle="tab" aria-selected="false")
                %i.material-icons rule
                Options
            %li.nav-item{title:'Search on map'}
              %a.nav-link{href: "#mapka", role: "tab", 'data-toggle': "tab", 'aria-selected': "false"}
                %i.material-icons map
                Map

            %li.nav-item{title:'Expand less menu', }
              %a.nav-link.show#toggle-submenu(href="#tt" role="tab" data-toggle="tab" aria-selected="true")
                .div
                  %i.material-icons unfold_less
                  %span Menu
          -# ---------------------
          .tab-content.tab-space.col-md-12.ml-auto.mr-auto
          
            #map1.tab-pane.active
              = render 'pages/shared/search'
          
            #map2.tab-pane
              -# %nav.navbar.navbar-primary.navbar-color-on-scroll.navbar-expand-lg.navbar-transparent
              = render 'pages/shared/submenu', locals: { categories: @categories }
          
            #mapka.tab-pane
              .px-3{"data-target":"togglemap.toggleable"}
                - jobs_for_map
                - jobs_for_map0 = jobs_for_map[2]
                - jobs_for_map1 = jobs_for_map[0]
                .map-container.pb-2
                  #map
            -# %button.btn-secondary.rounded.text-white{"data-action":"click->togglemap#toggle","data-target":"togglemap.buttontext"} Toggle map
            -# %button.btn-success.rounded.px-3.py-3.text-white{onclick:"getMeCurrentLocation"} Toggle map
          

    :javascript
      function getMeCurrentLocation(){
      navigator.geolocation.getCurrentPosition(function(position){
      return position
      });
      }
      function createForJobs(jobs){
      result = jobs.split(', ');
      result[0].replace('[', '');
      return result
      }
      function createForJobsTab(jobs){
      result = jobs.split(', ');
      result[0].replace('[', '');
      return result
      }

      function createForJobsMap(jobs){
      jobs.replace('[', '')
      result = jobs.split(']');
      //result.replace('", ', '')

      for (let i = 0; i < result.length; i++) {
      result[i] = result[i].replace('[[','').replace(', [', '')
      }
      return result
      }
      function createInfoWindow(text){
      var infowindow = new google.maps.InfoWindow({content: text});
      return infowindow;
      }
      // Initialize and add the map
      function initMap() {
      getMeCurrentLocation()
      function getMeCurrentLocation(){
        navigator.geolocation.getCurrentPosition(function(position){
        afterInitCurrentLocation(position)
        });
      }
      }
      function afterInitCurrentLocation(current_location) {
        //var current_position = getMeCurrentLocation();
        
        var tab = createForJobsMap("#{jobs_for_map}")
        //-# var job = createForJobs("#{jobs_for_map0}");
        //-# var job1 = createForJobs("#{jobs_for_map1}");
    
        // The location of Uluru
        var uluru = {lat: current_location.coords.latitude, lng: current_location.coords.longitude};
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), {zoom: 12, center: uluru});
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({position: uluru, map: map});
        // var marker1 = new google.maps.Marker({position: {lat: 51.509882, lng: -0.135007}, map: map});
        //-# var marker3 = new google.maps.Marker({position: {lat: 51.451818, lng: -0.02806}, map: map});



        //-# var marker2 = new google.maps.Marker({position: {lat: parseFloat(job[1]), lng: parseFloat(job[2])}, map: map});
        //-# var info2 = createInfoWindow(`${job[0].replace('[', '').replace('"', '')}`);
        //-# google.maps.event.addListener(marker2, 'click', function(){
        //-# info2.open(map, marker2);
        //-# })

        //-# var marker4 = new google.maps.Marker({position: {lat: parseFloat(job1[1]), lng: parseFloat(job1[2])}, map: map});
        //var info2 = createInfoWindow(`${job1[0].replace('[', '').replace('"', '')}`);
        //google.maps.event.addListener(marker4, 'click', function(){
        //info2.open(map, marker4);
        //})
        var contentString = '<div id="content">'+
        '<div id="siteNotice">'+
        '</div>'+
        '<h1 id="firstHeading" class="firstHeading">DOM</h1>'+
        '<div id="bodyContent">'+
        '<p></p>'+
        '<p>Attribution: Uluru, <a href="https://google.com" target="_blank">'+
        'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+
        '(last visited June 22, 2009).</p>'+
        '</div>'+
        '</div>';

        var info = createInfoWindow(contentString);
        google.maps.event.addListener(marker, 'click', function(){
        info.open(map, marker);
        })

        var markers = []
        var infos = []
        let url;
        for(let i = 0;  i < tab.length; i++){

        markers[i] = new google.maps.Marker({position: {lat: parseFloat(createForJobsTab(tab[i])[1]), lng: parseFloat(createForJobsTab(tab[i])[2])}, map: map});
        try {
        url = new URL(createForJobsTab(tab[i])[3].replace('&quot;', '').replace('&quot;', ''));
        }
        catch(err) {
        console.error(err.message);
        }
        
        contentString = '<div id="content">'+
        '<div id="siteNotice">'+
        '</div>'+
        `<h3 id="firstHeading" class="firstHeading text-primary">${createForJobsTab(tab[i])[0]}</h3>`+
        '<div id="bodyContent">'+
        '<p><a href='+`${url}`+'>Go to adversiter</a></p>'+
        `<p>Attribution: Uluru, <a href=${url}>${createForJobsTab(tab[i])[4]}</a> `+
        '().</p>'+
        '</div>'+
        '</div>';
        infos[i] = createInfoWindow(contentString);
        google.maps.event.addListener(markers[i], 'click', function(){
        infos[i].open(map, markers[i]);
        })
        }
      }

    -# %script{:defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyDwomzJUCvqK6THoyQuiCYGpO2dRUvCE5w&callback=initMap"}:cdata
    = google_maps_api_script_tag